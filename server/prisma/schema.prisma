datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["metrics"]
}

model User {
  id          String      @id @default(uuid())
  email       String      @unique
  password    String
  name        String
  isAdmin     Boolean     @default(false)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  notes       Note[]
  folders     Folder[]
  sharedNotes NoteShare[]
}

model Note {
  id          String      @id @default(uuid())
  title       String
  content     String      @default("")
  category    String?
  isLocked    Boolean     @default(false)
  passcode    String?
  folderId    String?
  authorId    String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  author      User        @relation(fields: [authorId], references: [id])
  folder      Folder?     @relation(fields: [folderId], references: [id])
  sharedWith  NoteShare[]
}

model Folder {
  id        String   @id @default(uuid())
  name      String
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  notes     Note[]
  author    User     @relation(fields: [authorId], references: [id])
}

model NoteShare {
  id        String   @id @default(uuid())
  noteId    String
  userId    String
  canEdit   Boolean  @default(false)
  createdAt DateTime @default(now())
  note      Note     @relation(fields: [noteId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([noteId, userId])
}

// ... rest of your models 