const CACHE_NAME="cloudnotes-v1",STATIC_CACHE="static-v1",DYNAMIC_CACHE="dynamic-v1",STATIC_ASSETS=["/","/index.html","/bundle.js","/manifest.json","/favicon.ico"];self.addEventListener("install",(e=>{e.waitUntil(caches.open("static-v1").then((e=>e.addAll(STATIC_ASSETS))))})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((e=>Promise.all(e.filter((e=>"static-v1"!==e&&"dynamic-v1"!==e)).map((e=>caches.delete(e)))))))}));const isApiRequest=e=>e.includes("/api/"),isStaticAsset=e=>STATIC_ASSETS.some((t=>e.endsWith(t)));self.addEventListener("fetch",(e=>{const t=new URL(e.request.url);t.pathname.includes("socket.io")||(isApiRequest(t.pathname)?e.respondWith(fetch(e.request).then((t=>{if("GET"===e.request.method&&200===t.status){const s=t.clone();caches.open("dynamic-v1").then((t=>{t.put(e.request,s)}))}return t})).catch((()=>caches.match(e.request)))):isStaticAsset(t.pathname)?e.respondWith(caches.match(e.request).then((t=>t||fetch(e.request)))):e.respondWith(fetch(e.request).then((t=>{if(200===t.status){const s=t.clone();caches.open("dynamic-v1").then((t=>{t.put(e.request,s)}))}return t})).catch((()=>caches.match(e.request)))))})),self.addEventListener("sync",(e=>{"sync-notes"===e.tag&&e.waitUntil(Promise.resolve())}));